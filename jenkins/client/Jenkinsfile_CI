pipeline {
    agent any
    stages {
        
        stage('build && SonarQube analysis') {
            agent {
                docker {
                    image 'sonarsource/sonar-scanner-cli'
                    args '--network jenkins'
                }
            }
            steps {
                sh '''
                    cd src/client-app
                    sonar-scanner \
                        -Dsonar.host.url=http://sonarqube:9000 \
                        -Dsonar.login=sqp_db6935970812fb6a1bcaae943b99430bf91b5dec \
                        -Dsonar.projectKey=Reactivities-Client-App \
                        -Dsonar.projectName=Reactivities-Client-App
                '''
            }
        }
        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                    // true = set pipeline to UNSTABLE, false = don't
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
}
