pipeline {
    agent {
        docker {
            image 'node:lts-buster-slim'
            args '-p 3000:3000'
        }
    }
    environment {
        CI = 'true'
    }
    stages {
        stage('Build') {
            steps {
                sh "echo ${env.NODE_NAME}"
                sh '''
                    cd ./src/client-app
                    npm install
                '''
            }
        }
        stage('Test') {
            steps {
                sh '''
                    cd ./src/client-app
                    npm run test
                '''
            }
        }
        stage('Quality Gate') {
            when {
                expression { params.RUN_SONAR == 'Yes' }
            }
            agent {
                docker {
                    image 'sonarsource/sonar-scanner-cli'
                    args '-e SONAR_HOST_URL="http://sonarqube:9000" -e SONAR_SCANNER_OPTS="-Dsonar.projectKey=Reactivities-Client-App" -e SONAR_LOGIN="sqp_db6935970812fb6a1bcaae943b99430bf91b5dec"'
                }
            }
            steps {
                echo 'ls'
            }
        }
        stage('Package') {
            steps {
                echo 'TODO: package the build output'
            }
        }
    }
}
